{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","autores","id","nome","email","fetch","then","response","json","body","setState","href","className","htmlFor","type","name","defaultValue","this","map","autor","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAsHeA,E,kDAjHb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,QAAS,CACP,CAAEC,GAAI,EAAGC,KAAM,gBAAiBC,MAAO,iCAL/B,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAET,QAASQ,S,oBAG7C,WACE,OACE,sBAAKP,GAAG,SAAR,UACE,mBAAGS,KAAK,QAAQT,GAAG,WAAWU,UAAU,YAAxC,SACE,2BAGF,qBAAKV,GAAG,OAAR,SACE,sBAAKU,UAAU,YAAf,UACE,mBAAGA,UAAU,oBAAoBD,KAAK,WAAtC,qBAIA,qBAAIC,UAAU,iBAAd,UACE,oBAAIA,UAAU,iBAAd,SACE,mBAAGD,KAAK,QAAQC,UAAU,iBAA1B,oBAIF,oBAAIA,UAAU,iBAAd,SACE,mBAAGD,KAAK,SAASC,UAAU,iBAA3B,qBAKF,oBAAIA,UAAU,sDAAd,SACE,mBAAGD,KAAK,YAAYC,UAAU,iBAA9B,6BAQR,sBAAKV,GAAG,OAAR,UACE,sBAAKU,UAAU,SAAf,UACE,qDACA,kFAGF,sBAAKV,GAAG,UAAUU,UAAU,UAA5B,UACE,qBAAKA,UAAU,8BAAf,SACE,uBAAMA,UAAU,8BAAhB,UACE,sBAAKA,UAAU,qBAAf,UACE,uBAAOC,QAAQ,OAAf,kBACA,uBAAOX,GAAG,OAAOY,KAAK,OAAOC,KAAK,OAAOC,aAAa,QAExD,sBAAKJ,UAAU,qBAAf,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBAAOX,GAAG,QAAQY,KAAK,QAAQC,KAAK,QAAQC,aAAa,QAE3D,sBAAKJ,UAAU,qBAAf,UACE,uBAAOC,QAAQ,QAAf,mBACA,uBACEX,GAAG,QACHY,KAAK,WACLC,KAAK,QACLC,aAAa,QAGjB,sBAAKJ,UAAU,qBAAf,UACE,0BACA,wBACEE,KAAK,SACLF,UAAU,kCAFZ,4BAUN,8BACE,wBAAOA,UAAU,aAAjB,UACE,gCACE,+BACE,sCACA,4CAGJ,gCACGK,KAAKjB,MAAMC,QAAQiB,KAAI,SAACC,GAAD,OACtB,+BACE,6BAAKA,EAAMhB,OACX,6BAAKgB,EAAMf,UAFJe,EAAMjB,2B,GAnGjBkB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bc3a160a.chunk.js","sourcesContent":["import \"purecss/build/pure-min.css\";\nimport \"purecss/site/static/layouts/side-menu/styles.css\";\nimport React, { Component } from \"react\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      autores: [\n        { id: 1, nome: \"Alberto Souza\", email: \"alberto.souza@caelum.com.br\" },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://cdc-react.herokuapp.com/api/autores\")\n      .then((response) => response.json())\n      .then((body) => this.setState({ autores: body }));\n  }\n\n  render() {\n    return (\n      <div id=\"layout\">\n        <a href=\"#menu\" id=\"menuLink\" className=\"menu-link\">\n          <span></span>\n        </a>\n\n        <div id=\"menu\">\n          <div className=\"pure-menu\">\n            <a className=\"pure-menu-heading\" href=\"#company\">\n              Company\n            </a>\n\n            <ul className=\"pure-menu-list\">\n              <li className=\"pure-menu-item\">\n                <a href=\"#home\" className=\"pure-menu-link\">\n                  Home\n                </a>\n              </li>\n              <li className=\"pure-menu-item\">\n                <a href=\"#about\" className=\"pure-menu-link\">\n                  Autor\n                </a>\n              </li>\n\n              <li className=\"pure-menu-item menu-item-divided pure-menu-selected\">\n                <a href=\"/servicos\" className=\"pure-menu-link\">\n                  Livro\n                </a>\n              </li>\n            </ul>\n          </div>\n        </div>\n\n        <div id=\"main\">\n          <div className=\"header\">\n            <h1>Cadastro de Autores</h1>\n            <h2>Cadastro dos Autores para cadastro dos Livros</h2>\n          </div>\n\n          <div id=\"content\" className=\"content\">\n            <div className=\"pure-form pure-form-aligned\">\n              <form className=\"pure-form pure-form-aligned\">\n                <div className=\"pure-control-group\">\n                  <label htmlFor=\"nome\">Nome</label>\n                  <input id=\"nome\" type=\"text\" name=\"nome\" defaultValue=\"\" />\n                </div>\n                <div className=\"pure-control-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input id=\"email\" type=\"email\" name=\"email\" defaultValue=\"\" />\n                </div>\n                <div className=\"pure-control-group\">\n                  <label htmlFor=\"senha\">Senha</label>\n                  <input\n                    id=\"senha\"\n                    type=\"password\"\n                    name=\"senha\"\n                    defaultValue=\"\"\n                  />\n                </div>\n                <div className=\"pure-control-group\">\n                  <label></label>\n                  <button\n                    type=\"submit\"\n                    className=\"pure-button pure-button-primary\"\n                  >\n                    Gravar\n                  </button>\n                </div>\n              </form>\n            </div>\n\n            <div>\n              <table className=\"pure-table\">\n                <thead>\n                  <tr>\n                    <th>nome</th>\n                    <th>email</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.autores.map((autor) => (\n                    <tr key={autor.id}>\n                      <td>{autor.nome}</td>\n                      <td>{autor.email}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}